import{r as n,A as i,j as e,T as c,L as u}from"./index-e977f244.js";import{C as l}from"./CodeExample-afb20d1c.js";import"./toast-04da3939.js";import"./formatCode-85636521.js";const x=`
<label class="block text-sm weight-500">First Name</label>
<input type="text" value="Cesar" class="w-50 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1" />
`.slice(1,-1),p=`
<label class="block text-sm weight-500">Fixed Width</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">25% Width</label>
<input type="text" value="Flexcore" class="w-1/4 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">50% Width</label>
<input type="text" value="Flexcore" class="w-1/2 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<br />
<label class="block text-sm weight-500">Small Height</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 mb-4" />
<label class="block text-sm weight-500">Medium Height</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Large Height</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-2" />
`.slice(1,-1),g=`
<label class="block text-sm weight-500">Enabled</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Disabled</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-100 dark:bg-neutral-600 border border-neutral-300 dark:border-neutral-500 rounded-lg px-3 py-1 opacity-60" disabled />
`.slice(1,-1),k=`
<label class="block text-sm weight-500">Regular</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Readonly</label>
<input type="text" value="Flexcore" class="w-50 bg-neutral-100 dark:bg-neutral-600 border border-neutral-300 dark:border-neutral-500 focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 opacity-60" readonly />
`.slice(1,-1),h=`
<label class="block text-sm weight-500">Color</label>
<input type="color" class="w-75 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Date</label>
<input type="date" class="w-75 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Date Time</label>
<input type="datetime-local" class="w-75 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Text</label>
<input type="text" value="Flexcore" class="w-75 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Time</label>
<input type="time" class="w-75 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
<label class="block text-sm weight-500">Week</label>
<input type="week" class="w-75 bg-neutral-50 dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 dark:text-white focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-500 dark:focus:border-blue-500 rounded-lg px-3 py-1 mb-4" />
`.slice(1,-1),j=()=>{const{sidebarActive:t,setSidebarActive:o}=n.useContext(i),r=b=>{const a=document.getElementById(b),s=a==null?void 0:a.getBoundingClientRect().top;let d=0;s!==void 0&&(d=s+window.scrollY-85),window.scrollTo({top:d,behavior:"smooth"})};return n.useEffect(()=>{t===null&&o(!0)},[t,o]),e.jsxs("article",{className:t?"article-content-sb-active":"article-content",children:[e.jsx("h2",{children:"Text Fields"}),e.jsx("p",{children:"Text fields provide an input mechanism for users to enter text or data into a web form. With Flexcore you can create a versatile set of text field components that can be easily customized into your interface."}),e.jsx("h3",{id:"Basic Example",children:"Basic Example"}),e.jsx("p",{children:"To get started with text fields, you can use the following code snippet as a basic example:"}),e.jsx(l,{snippet:x}),e.jsx("h3",{id:"Sizing",children:"Sizing"}),e.jsx("p",{children:"To get started with text fields, you can use the following code snippet as a basic example:"}),e.jsx(l,{snippet:p}),e.jsx("h3",{id:"Disabled",children:"Disabled"}),e.jsxs("p",{children:["You can disable a text field by adding the ",e.jsx("mark",{children:"disabled"})," attribute to the HTML input element. This will prevent user from interacting with the text field."]}),e.jsx(l,{snippet:g}),e.jsx("h3",{id:"Readonly",children:"Readonly"}),e.jsxs("p",{children:["If you want to make a text field read-only, you can use the ",e.jsx("mark",{children:"readonly"})," attribute. This will allow users to view the content of the text field but prevent them from editing it."]}),e.jsxs("section",{className:"notification-container-info",children:[e.jsx(c,{}),e.jsx("span",{className:"quote-text",children:"Disabled fields are entirely non-editable and unselectable, while readonly fields allow selection but restrict any modifications to the content"})]}),e.jsx(l,{snippet:k}),e.jsx("h3",{id:"Input Types",children:"Input Types"}),e.jsxs("p",{children:["An ",e.jsx("mark",{children:"input"})," can change considerably depending on the value of its ",e.jsx("mark",{children:"type"})," attribute:"]}),e.jsx(l,{snippet:h}),e.jsxs("footer",{children:[e.jsx(u,{to:"/forms-and-inputs/buttons",children:"Buttons"}),e.jsx(u,{to:"/layouts/container",children:"Container"})]}),e.jsxs("div",{className:"article-sidebar",children:[e.jsx("h3",{children:"Contents"}),e.jsx("h4",{onClick:()=>r(""),children:"Text Fields"}),e.jsx("h4",{onClick:()=>r("Basic Example"),children:"Basic Example"}),e.jsx("h4",{onClick:()=>r("Sizing"),children:"Sizing"}),e.jsx("h4",{onClick:()=>r("Disabled"),children:"Disabled"}),e.jsx("h4",{onClick:()=>r("Readonly"),children:"Readonly"}),e.jsx("h4",{onClick:()=>r("Input Types"),children:"Input Types"})]})]})};export{j as default};
